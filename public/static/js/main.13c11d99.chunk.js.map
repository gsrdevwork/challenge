{"version":3,"sources":["components/UsersTable.js","components/Dropdown.js","components/DemographicsTable.js","hooks/useUsers.js","hooks/useItems.js","hooks/useDemographics.js","App.js","reportWebVitals.js","index.js"],"names":["UsersTable","users","className","scope","map","user","username","age","defaultProps","Dropdown","items","selected","onSelect","value","onChange","Button","as","Fragment","leave","leaveFrom","leaveTo","Options","item","itemIdx","Option","active","DemographicsTable","loading","ageDemographics","data","count","LoadingIndicator","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","type","repeatCount","dur","values","keyTimes","useUsers","useState","setUsers","useEffect","a","axios","get","fetchUsers","useItems","setItems","fetchItems","useDemographics","setAgeDemographics","setLoading","params","fetchAgeDemographics","App","setSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13c11d99.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst UsersTable = ({ users }) => {\r\n    return (\r\n        <div className=\"shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                            Username\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                            Age\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {users.map((user) => (\r\n                        <tr key={user.username}>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"ml-4\">\r\n                                        <div className=\"text-sm font-medium text-gray-900\">\r\n                                            {user.username}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-900\">\r\n                                    {user.age}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nUsersTable.defaultProps = {\r\n    users: []\r\n}\r\n\r\nUsersTable.propTypes = {\r\n    users: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            username: PropTypes.string,\r\n            age: PropTypes.number,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default UsersTable;\r\n","import { Fragment } from 'react';\r\nimport { Listbox, Transition } from '@headlessui/react';\r\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\r\nimport PropTypes from 'prop-types';\r\nconst Dropdown = ({ items, selected, onSelect }) => {\r\n    return (\r\n        <Listbox value={selected} onChange={onSelect}>\r\n            <div className=\"relative mt-1\">\r\n                <Listbox.Button className=\"relative w-full py-2 pl-3 pr-10 text-left bg-gray-100 rounded-lg shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\r\n                    <span className=\"block truncate\">{selected || 'Item'}</span>\r\n                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                        <SelectorIcon\r\n                            className=\"w-5 h-5 text-gray-400\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                    </span>\r\n                </Listbox.Button>\r\n                <Transition\r\n                    as={Fragment}\r\n                    leave=\"transition ease-in duration-100\"\r\n                    leaveFrom=\"opacity-100\"\r\n                    leaveTo=\"opacity-0\"\r\n                >\r\n                    <Listbox.Options className=\"absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n                        {items.map((item, itemIdx) => (\r\n                            <Listbox.Option\r\n                                key={itemIdx}\r\n                                className={({ active }) =>\r\n                                    `${\r\n                                        active\r\n                                            ? 'text-amber-900 bg-amber-100'\r\n                                            : 'text-gray-900'\r\n                                    }\r\n                          cursor-default select-none relative py-2 pl-10 pr-4 hover:bg-blue-600 hover:text-white`\r\n                                }\r\n                                value={item}\r\n                            >\r\n                                {({ selected, active }) => (\r\n                                    <>\r\n                                        <span\r\n                                            className={`${\r\n                                                selected\r\n                                                    ? 'font-medium'\r\n                                                    : 'font-normal'\r\n                                            } block truncate`}\r\n                                        >\r\n                                            {item}\r\n                                        </span>\r\n                                        {selected ? (\r\n                                            <span\r\n                                                className={`${\r\n                                                    active\r\n                                                        ? 'text-amber-600'\r\n                                                        : 'text-amber-600'\r\n                                                }\r\n                                absolute inset-y-0 left-0 flex items-center pl-3`}\r\n                                            >\r\n                                                <CheckIcon\r\n                                                    className=\"w-5 h-5\"\r\n                                                    aria-hidden=\"true\"\r\n                                                />\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))}\r\n                    </Listbox.Options>\r\n                </Transition>\r\n            </div>\r\n        </Listbox>\r\n    );\r\n};\r\n\r\nDropdown.defaultProps = {\r\n    items: [],\r\n    selected: ''\r\n}\r\n\r\nDropdown.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.string),\r\n    selected: PropTypes.string,\r\n    onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dropdown;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst DemographicsTable = ({ loading, ageDemographics }) => {\r\n    return (\r\n        <div className=\"shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                            Age\r\n                        </th>\r\n                        <th\r\n                            scope=\"col\"\r\n                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                        >\r\n                            Count\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {!loading &&\r\n                        ageDemographics.map((data) => (\r\n                            <tr key={data.age}>\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    <div className=\"flex items-center\">\r\n                                        <div className=\"ml-4\">\r\n                                            <div className=\"text-sm font-medium text-gray-900\">\r\n                                                {data.age}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    <div className=\"text-sm text-gray-900\">\r\n                                        {data.count}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            {loading && (\r\n                <div className=\"w-full p-3 flex justify-center items-center h-full\">\r\n                    <LoadingIndicator />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nDemographicsTable.defaultProps = {\r\n    loading: false,\r\n    ageDemographics: [],\r\n};\r\n\r\nDemographicsTable.propTypes = {\r\n    loading: PropTypes.bool,\r\n    ageDemographics: PropTypes.array(\r\n        PropTypes.shape({\r\n            age: PropTypes.string,\r\n            count: PropTypes.number,\r\n        })\r\n    ),\r\n};\r\n\r\nconst LoadingIndicator = () => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        style={{\r\n            margin: 'auto',\r\n            background: 'none',\r\n            display: 'block',\r\n            shapeRendering: 'auto',\r\n        }}\r\n        width=\"50px\"\r\n        height=\"50px\"\r\n        viewBox=\"0 0 100 100\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n        <circle\r\n            cx={50}\r\n            cy={50}\r\n            fill=\"none\"\r\n            stroke=\"#0a0a0a\"\r\n            strokeWidth={16}\r\n            r={38}\r\n            strokeDasharray=\"179.0707812546182 61.690260418206066\"\r\n        >\r\n            <animateTransform\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                repeatCount=\"indefinite\"\r\n                dur=\"1.075268817204301s\"\r\n                values=\"0 50 50;360 50 50\"\r\n                keyTimes=\"0;1\"\r\n            />\r\n        </circle>\r\n    </svg>\r\n);\r\n\r\nexport default DemographicsTable;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst useUsers = () => {\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            const { data } = await axios.get('/users');\r\n            setUsers(data);\r\n        };\r\n        fetchUsers();\r\n    }, []);\r\n    return users;\r\n};\r\n\r\nexport default useUsers;","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst useItems = () => {\r\n    const [items, setItems] = useState([]);\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            const { data } = await axios.get('/items');\r\n            setItems(data);\r\n        };\r\n        fetchItems();\r\n    }, []);\r\n    return items;\r\n};\r\n\r\nexport default useItems;","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst useDemographics = (selected) => {\r\n    const [ageDemographics, setAgeDemographics] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchAgeDemographics = async () => {\r\n            setLoading(true)\r\n            const { data } = await axios.get('/users/age', {\r\n                params: {\r\n                    item: selected,\r\n                },\r\n            });\r\n            setAgeDemographics(data);\r\n            setLoading(false)\r\n        };\r\n        fetchAgeDemographics();\r\n    }, [selected]);\r\n\r\n    return { ageDemographics, loading }\r\n};\r\n\r\nexport default useDemographics;","import { useState } from 'react';\nimport UsersTable from './components/UsersTable';\nimport Dropdown from './components/Dropdown';\nimport DemographicsTable from './components/DemographicsTable';\nimport useUsers from './hooks/useUsers';\nimport useItems from './hooks/useItems';\nimport useDemographics from './hooks/useDemographics';\n\nfunction App() {\n    const users = useUsers();\n    const items = useItems();\n    const [selected, setSelected] = useState('');\n    const { loading, ageDemographics } = useDemographics(selected)\n\n    return (\n        <main className=\"container mx-auto px-4 py-8\">\n            <section className=\"mb-8\">\n                <header className=\"mb-4\">\n                    <h1 className=\"text-3xl font-bold\">All Users</h1>\n                    <p className=\"text-gray-500\">Users and their age</p>\n                </header>\n                <UsersTable users={users} />\n            </section>\n            <section className=\"mb-8\">\n                <header className=\"mb-4\">\n                    <h1 className=\"text-3xl font-bold mb-2\">\n                        Age Demographics of Users With _____\n                    </h1>\n                    <Dropdown\n                        selected={selected}\n                        items={items}\n                        onSelect={setSelected}\n                    />\n                </header>\n                <DemographicsTable loading={loading} ageDemographics={ageDemographics} />\n            </section>\n        </main>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}